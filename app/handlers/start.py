from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select

from app.models.user import User
from app.keyboards.inline import main_menu_keyboard
from app.utils.db import get_session

router = Router()


@router.message(Command("start"))
async def cmd_start(message: Message, session: AsyncSession):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    user = await get_or_create_user(session, message)
    
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    welcome_text = (
        f"üëã <b>–ü—Ä–∏–≤–µ—Ç, {user.first_name}!</b>\n\n"
        f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>FitGains Bot</b> ‚Äî —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –Ω–∞–±–æ—Ä—É –º—ã—à–µ—á–Ω–æ–π –º–∞—Å—Å—ã! üí™\n\n"
        f"–° –º–æ–µ–π –ø–æ–º–æ—â—å—é —Ç—ã —Å–º–æ–∂–µ—à—å:\n"
        f"‚Ä¢ –ü–æ–ª—É—á–∏—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ üèãÔ∏è‚Äç‚ôÇÔ∏è\n"
        f"‚Ä¢ –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è üçΩÔ∏è\n"
        f"‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å üìä\n"
        f"‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—é üîî\n\n"
    )
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –µ–º—É –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
    if not user.height or not user.weight:
        welcome_text += (
            "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã, –¥–∞–≤–∞–π –∑–∞–ø–æ–ª–Ω–∏–º —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å —Å –±–∞–∑–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏, "
            "—á—Ç–æ–±—ã —è –º–æ–≥ –ø–æ–¥–æ–±—Ä–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –∏–º–µ–Ω–Ω–æ –¥–ª—è —Ç–µ–±—è."
        )
        await message.answer(welcome_text, reply_markup=main_menu_keyboard(new_user=True))
    else:
        welcome_text += (
            "–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å–µ–≥–æ–¥–Ω—è?"
        )
        await message.answer(welcome_text, reply_markup=main_menu_keyboard())


@router.callback_query(F.data == "main_menu")
async def process_main_menu(callback: CallbackQuery, session: AsyncSession):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    """
    user = await get_user(session, callback.from_user.id)
    
    menu_text = (
        f"<b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n"
        f"–í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:"
    )
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø–æ–ª–Ω–µ–Ω –ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    new_user = not user.height or not user.weight
    
    await callback.message.edit_text(menu_text, reply_markup=main_menu_keyboard(new_user=new_user))
    await callback.answer()


async def get_or_create_user(session: AsyncSession, message: Message) -> User:
    """
    –ü–æ–ª—É—á–∏—Ç—å –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    result = await session.execute(select(User).where(User.telegram_id == message.from_user.id))
    user = result.scalar_one_or_none()
    
    if not user:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = User(
            telegram_id=message.from_user.id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name
        )
        session.add(user)
        await session.commit()
        await session.refresh(user)
    
    return user


async def get_user(session: AsyncSession, telegram_id: int) -> User:
    """
    –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ telegram_id
    """
    result = await session.execute(select(User).where(User.telegram_id == telegram_id))
    user = result.scalar_one_or_none()
    return user
